"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ProdConfig = {
    ENV: 'PROD',
    API: 'http://localhost:8000/api/v1',
    MAP_BOX_API: 'https://api.mapbox.com/geocoding/v5/mapbox.places/',
    MAP_BOX_API_KEY: 'pk.eyJ1IjoiYmVuc2hleiIsImEiOiJjajFmZ2ludHMwMGx0MzJ0NDJzbW14MWc5In0.3W8kUIEbiliNAEl85DqD-A'
};
var Config = (function () {
    function Config() {
    }
    // convenient platform checks
    Config.IS_WEB = function () {
        return Config.PLATFORM_TARGET === Config.PLATFORMS.WEB;
    };
    Config.IS_MOBILE_NATIVE = function () {
        return Config.PLATFORM_TARGET === Config.PLATFORMS.MOBILE_NATIVE;
    };
    Config.IS_MOBILE_HYBRID = function () {
        return Config.PLATFORM_TARGET === Config.PLATFORMS.MOBILE_HYBRID;
    };
    Config.IS_DESKTOP = function () {
        return Config.PLATFORM_TARGET === Config.PLATFORMS.DESKTOP;
    };
    Config.ENVIRONMENT = function () {
        try {
            return ProdConfig;
        }
        catch (exp) {
            return {};
        }
    };
    // supported languages
    Config.GET_SUPPORTED_LANGUAGES = function () {
        return [
            { code: 'en', title: 'English' },
            { code: 'es', title: 'Spanish' },
            { code: 'fr', title: 'French' },
            { code: 'ru', title: 'Russian' },
            { code: 'bg', title: 'Bulgarian' }
        ];
    };
    Config.IS_DEBUG_MODE = function () {
        for (var key in Config.DEBUG) {
            if (Config.DEBUG[key]) {
                // if any level is on, debug mode is on
                return true;
            }
        }
        return false;
    };
    // reset debug defaults
    Config.RESET = function () {
        for (var key in Config.DEBUG) {
            if (Config.DEBUG[key]) {
                Config.DEBUG[key] = false;
            }
        }
    };
    Config.LOCAL_STORAGE = function () {
        return (typeof (localStorage) !== undefined) ? localStorage : applicationCache;
    };
    Config.SESSION_STORAGE = function () {
        return (typeof (sessionStorage) !== undefined) ? sessionStorage : applicationCache;
    };
    Config.ROUTE_PARAMETERS = {
        LOGIN_RETURN_URL: 'loginReturnUrl',
        LONGITUDE: 0,
        LATITUDE: 0,
        INDUSTRY: 0
    };
    Config.ROUTE_ROUTES = {
        ADMIN: 'admin',
        LOGIN: 'login',
        REGISTER: 'register',
        MAP_PLACES: 'map-places',
        MAP: 'map'
    };
    Config.CACHE_KEYS = {
        USER_KEY: 'user_',
        MAP_KEY: 'mapper_',
        INDUSTRIES_KEY: 'industries_'
    };
    Config.API_END_POINTS = {
        USER_LOGIN: 'user/login',
        MAP: '',
        INDUSTRIES: 'industries/'
    };
    Config.LOCKER_KEYS = {
        USER_DETAIL: 'user_detail'
    };
    Config.COMPONENT_ITEMS = {
        TEMPLATE: 'component.html',
        CSS: 'component.scss',
        LABEL_PREFIX: 'lbl'
    };
    Config.TRANSITION = {
        DURATION: 1000,
        SLIDE_TOP: 'slideTop'
    };
    Config.EVENTS = {
        ARROW_UP: 'up',
        ARROW_DOWN: 'down',
        FOCUS: 'focus'
    };
    Config.DICTIONAR_KEYS = {
        KEY: 'key',
        VALUE: 'value'
    };
    Config.DEBUG = {
        LEVEL_1: false,
        LEVEL_2: false,
        LEVEL_3: false,
        LEVEL_4: false // .log + all the above
    };
    // supported platforms
    Config.PLATFORMS = {
        WEB: 'web',
        MOBILE_NATIVE: 'mobile_native',
        MOBILE_HYBRID: 'mobile_hybrid',
        DESKTOP: 'desktop'
    };
    // current target (defaults to web)
    Config.PLATFORM_TARGET = Config.PLATFORMS.WEB;
    return Config;
}());
exports.Config = Config;
//# sourceMappingURL=data:application/json;base64,