Object.defineProperty(exports, "__esModule", { value: true });
// libs
var core_1 = require("@angular/core");
var forms_1 = require("@angular/forms");
var router_1 = require("@angular/router");
var index_1 = require("../../../core/index");
var services_1 = require("../../../core/services/api/services");
var LoginComponent = (function () {
    function LoginComponent(apiService, storage, fb, apiOptions, route, router) {
        this.apiService = apiService;
        this.storage = storage;
        this.fb = fb;
        this.apiOptions = apiOptions;
        this.route = route;
        this.router = router;
        this.email = new forms_1.FormControl('', forms_1.Validators.required);
        this.password = new forms_1.FormControl('', forms_1.Validators.required);
        this.model = {};
    }
    LoginComponent.prototype.ngOnInit = function () {
        this.returnUrl = this.route.snapshot.queryParams[index_1.Config.ROUTE_PARAMETERS.LOGIN_RETURN_URL] || '/';
        this.form = this.fb.group({
            email: this.email,
            password: this.password
        });
    };
    LoginComponent.prototype.login = function () {
        var _this = this;
        this.apiOptions.cacheKey = index_1.Config.CACHE_KEYS.USER_KEY;
        this.apiOptions.url = index_1.Config.API_END_POINTS.USER_LOGIN;
        this.apiOptions.parameters = this.form.value;
        this.apiOptions.concatApi = true;
        this.apiService.post(this.apiOptions)
            .subscribe(function (json) { _this.user = json; }, function (error) { return _this.errorMessage = error; }, function () {
            _this.storage.setItem(index_1.StorageKey.USER_DETAIL, JSON.stringify(_this.user));
            _this.router.navigate([_this.returnUrl]);
        });
    };
    return LoginComponent;
}());
LoginComponent = __decorate([
    core_1.Component({
        moduleId: module.id,
        selector: 'sd-login',
        templateUrl: index_1.Config.COMPONENT_ITEMS.TEMPLATE,
        styleUrls: [index_1.Config.COMPONENT_ITEMS.CSS],
        providers: [services_1.ApiService]
    }),
    __metadata("design:paramtypes", [services_1.ApiService, index_1.StorageService, forms_1.FormBuilder,
        index_1.ApiServiceParametersOptions, router_1.ActivatedRoute,
        router_1.Router])
], LoginComponent);
exports.LoginComponent = LoginComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9tb2R1bGVzL3VzZXIvY29tcG9uZW50cy9sb2dpbi9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU87QUFDUCxzQ0FBa0Q7QUFDbEQsd0NBQWlGO0FBQ2pGLDBDQUF5RDtBQUl6RCw2Q0FBc0c7QUFDdEcsZ0VBQWlFO0FBU2pFLElBQWEsY0FBYztJQVd2Qix3QkFBbUIsVUFBc0IsRUFBVSxPQUF1QixFQUFVLEVBQWUsRUFDdkYsVUFBdUMsRUFBVSxLQUFxQixFQUN0RSxNQUFjO1FBRlAsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUFVLFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBQVUsT0FBRSxHQUFGLEVBQUUsQ0FBYTtRQUN2RixlQUFVLEdBQVYsVUFBVSxDQUE2QjtRQUFVLFVBQUssR0FBTCxLQUFLLENBQWdCO1FBQ3RFLFdBQU0sR0FBTixNQUFNLENBQVE7UUFWbkIsVUFBSyxHQUFHLElBQUksbUJBQVcsQ0FBQyxFQUFFLEVBQUUsa0JBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNqRCxhQUFRLEdBQUcsSUFBSSxtQkFBVyxDQUFDLEVBQUUsRUFBRSxrQkFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBRW5ELFVBQUssR0FBUSxFQUFFLENBQUM7SUFPTSxDQUFDO0lBRS9CLGlDQUFRLEdBQVI7UUFDSSxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxjQUFNLENBQUMsZ0JBQWdCLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxHQUFHLENBQUM7UUFDbEcsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQztZQUN0QixLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1NBQzFCLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCw4QkFBSyxHQUFMO1FBQUEsaUJBY0M7UUFiRyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsR0FBRyxjQUFNLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQztRQUN0RCxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsR0FBRyxjQUFNLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQztRQUN2RCxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUM3QyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFFakMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQzthQUNoQyxTQUFTLENBQ1YsVUFBQyxJQUFTLElBQU8sS0FBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQ3BDLFVBQUMsS0FBVSxJQUFLLE9BQUEsS0FBSSxDQUFDLFlBQVksR0FBUSxLQUFLLEVBQTlCLENBQThCLEVBQzlDO1lBQ0ksS0FBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsa0JBQVUsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN4RSxLQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEtBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1FBQzNDLENBQUMsQ0FBQyxDQUFDO0lBQ1gsQ0FBQztJQUNMLHFCQUFDO0FBQUQsQ0F0Q0EsQUFzQ0MsSUFBQTtBQXRDWSxjQUFjO0lBUDFCLGdCQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsTUFBTSxDQUFDLEVBQUU7UUFDbkIsUUFBUSxFQUFFLFVBQVU7UUFDcEIsV0FBVyxFQUFFLGNBQU0sQ0FBQyxlQUFlLENBQUMsUUFBUTtRQUM1QyxTQUFTLEVBQUUsQ0FBQyxjQUFNLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQztRQUN2QyxTQUFTLEVBQUUsQ0FBQyxxQkFBVSxDQUFDO0tBQzFCLENBQUM7cUNBWWlDLHFCQUFVLEVBQW1CLHNCQUFjLEVBQWMsbUJBQVc7UUFDM0UsbUNBQTJCLEVBQWlCLHVCQUFjO1FBQzlELGVBQU07R0FiakIsY0FBYyxDQXNDMUI7QUF0Q1ksd0NBQWMiLCJmaWxlIjoiYXBwL21vZHVsZXMvdXNlci9jb21wb25lbnRzL2xvZ2luL2NvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGxpYnNcclxuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybUdyb3VwLCBGb3JtQ29udHJvbCwgRm9ybUJ1aWxkZXIsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFJvdXRlciwgQWN0aXZhdGVkUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5cclxuLy8gYXBwXHJcbmltcG9ydCB7IFVzZXIgfSBmcm9tICcuLi8uLi9pbmRleCc7XHJcbmltcG9ydCB7IFN0b3JhZ2VTZXJ2aWNlLCBTdG9yYWdlS2V5LCBDb25maWcsIEFwaVNlcnZpY2VQYXJhbWV0ZXJzT3B0aW9ucyB9IGZyb20gJy4uLy4uLy4uL2NvcmUvaW5kZXgnO1xyXG5pbXBvcnQgeyBBcGlTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vY29yZS9zZXJ2aWNlcy9hcGkvc2VydmljZXMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBtb2R1bGVJZDogbW9kdWxlLmlkLFxyXG4gICAgc2VsZWN0b3I6ICdzZC1sb2dpbicsXHJcbiAgICB0ZW1wbGF0ZVVybDogQ29uZmlnLkNPTVBPTkVOVF9JVEVNUy5URU1QTEFURSxcclxuICAgIHN0eWxlVXJsczogW0NvbmZpZy5DT01QT05FTlRfSVRFTVMuQ1NTXSxcclxuICAgIHByb3ZpZGVyczogW0FwaVNlcnZpY2VdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMb2dpbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgICBwdWJsaWMgbG9naW5Vc2VyOiBGb3JtR3JvdXA7XHJcbiAgICBwdWJsaWMgZm9ybTogRm9ybUdyb3VwO1xyXG4gICAgcHVibGljIGVtYWlsID0gbmV3IEZvcm1Db250cm9sKCcnLCBWYWxpZGF0b3JzLnJlcXVpcmVkKTtcclxuICAgIHB1YmxpYyBwYXNzd29yZCA9IG5ldyBGb3JtQ29udHJvbCgnJywgVmFsaWRhdG9ycy5yZXF1aXJlZCk7XHJcblxyXG4gICAgcHJpdmF0ZSBtb2RlbDogYW55ID0ge307XHJcbiAgICBwcml2YXRlIGVycm9yTWVzc2FnZTogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSB1c2VyOiBVc2VyO1xyXG4gICAgcHJpdmF0ZSByZXR1cm5Vcmw6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgYXBpU2VydmljZTogQXBpU2VydmljZSwgcHJpdmF0ZSBzdG9yYWdlOiBTdG9yYWdlU2VydmljZSwgcHJpdmF0ZSBmYjogRm9ybUJ1aWxkZXIsXHJcbiAgICAgICAgcHJpdmF0ZSBhcGlPcHRpb25zOiBBcGlTZXJ2aWNlUGFyYW1ldGVyc09wdGlvbnMsIHByaXZhdGUgcm91dGU6IEFjdGl2YXRlZFJvdXRlLFxyXG4gICAgICAgIHByaXZhdGUgcm91dGVyOiBSb3V0ZXIpIHsgfVxyXG5cclxuICAgIG5nT25Jbml0KCkge1xyXG4gICAgICAgIHRoaXMucmV0dXJuVXJsID0gdGhpcy5yb3V0ZS5zbmFwc2hvdC5xdWVyeVBhcmFtc1tDb25maWcuUk9VVEVfUEFSQU1FVEVSUy5MT0dJTl9SRVRVUk5fVVJMXSB8fCAnLyc7XHJcbiAgICAgICAgdGhpcy5mb3JtID0gdGhpcy5mYi5ncm91cCh7XHJcbiAgICAgICAgICAgIGVtYWlsOiB0aGlzLmVtYWlsLFxyXG4gICAgICAgICAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGxvZ2luKCkge1xyXG4gICAgICAgIHRoaXMuYXBpT3B0aW9ucy5jYWNoZUtleSA9IENvbmZpZy5DQUNIRV9LRVlTLlVTRVJfS0VZO1xyXG4gICAgICAgIHRoaXMuYXBpT3B0aW9ucy51cmwgPSBDb25maWcuQVBJX0VORF9QT0lOVFMuVVNFUl9MT0dJTjtcclxuICAgICAgICB0aGlzLmFwaU9wdGlvbnMucGFyYW1ldGVycyA9IHRoaXMuZm9ybS52YWx1ZTtcclxuICAgICAgICB0aGlzLmFwaU9wdGlvbnMuY29uY2F0QXBpID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgdGhpcy5hcGlTZXJ2aWNlLnBvc3QodGhpcy5hcGlPcHRpb25zKVxyXG4gICAgICAgICAgICAuc3Vic2NyaWJlKFxyXG4gICAgICAgICAgICAoanNvbjogYW55KSA9PiB7IHRoaXMudXNlciA9IGpzb247IH0sXHJcbiAgICAgICAgICAgIChlcnJvcjogYW55KSA9PiB0aGlzLmVycm9yTWVzc2FnZSA9IDxhbnk+ZXJyb3IsXHJcbiAgICAgICAgICAgICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3RvcmFnZS5zZXRJdGVtKFN0b3JhZ2VLZXkuVVNFUl9ERVRBSUwsIEpTT04uc3RyaW5naWZ5KHRoaXMudXNlcikpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5yb3V0ZXIubmF2aWdhdGUoW3RoaXMucmV0dXJuVXJsXSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
