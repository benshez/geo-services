Object.defineProperty(exports, "__esModule", { value: true });
// angular
var core_1 = require("@angular/core");
// libs
var angulartics2_1 = require("angulartics2");
// TODO: This is a wip at the moment
// Will implement native segment sdk soon
// https://github.com/NathanWalker/nativescript-segment/issues/1
var NSAngulartics2Segment = (function (_super) {
    __extends(NSAngulartics2Segment, _super);
    function NSAngulartics2Segment(angulartics2) {
        var _this = _super.call(this, angulartics2) || this;
        angulartics2.pageTrack.subscribe(function (x) { return _this.pageTrack(x.path, x.location); });
        angulartics2.eventTrack.subscribe(function (x) { return _this.eventTrack(x.action, x.properties); });
        angulartics2.setUserProperties.subscribe(function (x) { return _this.setUserProperties(x); });
        angulartics2.setUserPropertiesOnce.subscribe(function (x) { return _this.setUserProperties(x); });
        return _this;
    }
    NSAngulartics2Segment.prototype.pageTrack = function (path, location) {
        // TODO
    };
    NSAngulartics2Segment.prototype.eventTrack = function (action, properties) {
        // TODO
    };
    NSAngulartics2Segment.prototype.setUserProperties = function (properties) {
        // TODO
    };
    return NSAngulartics2Segment;
}(angulartics2_1.Angulartics2Segment));
NSAngulartics2Segment = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [angulartics2_1.Angulartics2])
], NSAngulartics2Segment);
exports.NSAngulartics2Segment = NSAngulartics2Segment;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vYmlsZS9hbmFseXRpY3Mvc2VydmljZXMvbnMtYW5ndWxhcnRpY3MyLXNlZ21lbnQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsVUFBVTtBQUNWLHNDQUEyQztBQUUzQyxPQUFPO0FBQ1AsNkNBQWlFO0FBRWpFLG9DQUFvQztBQUNwQyx5Q0FBeUM7QUFDekMsZ0VBQWdFO0FBR2hFLElBQWEscUJBQXFCO0lBQVMseUNBQW1CO0lBRTVELCtCQUFZLFlBQTBCO1FBQXRDLFlBQ0Usa0JBQU0sWUFBWSxDQUFDLFNBS3BCO1FBSkMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsVUFBQyxDQUFNLElBQUssT0FBQSxLQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFsQyxDQUFrQyxDQUFDLENBQUM7UUFDakYsWUFBWSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsVUFBQyxDQUFNLElBQUssT0FBQSxLQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxFQUF2QyxDQUF1QyxDQUFDLENBQUM7UUFDdkYsWUFBWSxDQUFDLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxVQUFDLENBQU0sSUFBSyxPQUFBLEtBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsRUFBekIsQ0FBeUIsQ0FBQyxDQUFDO1FBQ2hGLFlBQVksQ0FBQyxxQkFBcUIsQ0FBQyxTQUFTLENBQUMsVUFBQyxDQUFNLElBQUssT0FBQSxLQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLEVBQXpCLENBQXlCLENBQUMsQ0FBQzs7SUFDdEYsQ0FBQztJQUVNLHlDQUFTLEdBQWhCLFVBQWlCLElBQVksRUFBRSxRQUFhO1FBQzFDLE9BQU87SUFDVCxDQUFDO0lBRU0sMENBQVUsR0FBakIsVUFBa0IsTUFBYyxFQUFFLFVBQWU7UUFDL0MsT0FBTztJQUNULENBQUM7SUFFTSxpREFBaUIsR0FBeEIsVUFBeUIsVUFBZTtRQUN0QyxPQUFPO0lBQ1QsQ0FBQztJQUNILDRCQUFDO0FBQUQsQ0FyQkEsQUFxQkMsQ0FyQjBDLGtDQUFtQixHQXFCN0Q7QUFyQlkscUJBQXFCO0lBRGpDLGlCQUFVLEVBQUU7cUNBR2UsMkJBQVk7R0FGM0IscUJBQXFCLENBcUJqQztBQXJCWSxzREFBcUIiLCJmaWxlIjoibW9iaWxlL2FuYWx5dGljcy9zZXJ2aWNlcy9ucy1hbmd1bGFydGljczItc2VnbWVudC5zZXJ2aWNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gYW5ndWxhclxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vLyBsaWJzXG5pbXBvcnQgeyBBbmd1bGFydGljczIsIEFuZ3VsYXJ0aWNzMlNlZ21lbnQgfSBmcm9tICdhbmd1bGFydGljczInO1xuXG4vLyBUT0RPOiBUaGlzIGlzIGEgd2lwIGF0IHRoZSBtb21lbnRcbi8vIFdpbGwgaW1wbGVtZW50IG5hdGl2ZSBzZWdtZW50IHNkayBzb29uXG4vLyBodHRwczovL2dpdGh1Yi5jb20vTmF0aGFuV2Fsa2VyL25hdGl2ZXNjcmlwdC1zZWdtZW50L2lzc3Vlcy8xXG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBOU0FuZ3VsYXJ0aWNzMlNlZ21lbnQgZXh0ZW5kcyBBbmd1bGFydGljczJTZWdtZW50IHtcblxuICBjb25zdHJ1Y3Rvcihhbmd1bGFydGljczI6IEFuZ3VsYXJ0aWNzMikge1xuICAgIHN1cGVyKGFuZ3VsYXJ0aWNzMik7XG4gICAgYW5ndWxhcnRpY3MyLnBhZ2VUcmFjay5zdWJzY3JpYmUoKHg6IGFueSkgPT4gdGhpcy5wYWdlVHJhY2soeC5wYXRoLCB4LmxvY2F0aW9uKSk7XG4gICAgYW5ndWxhcnRpY3MyLmV2ZW50VHJhY2suc3Vic2NyaWJlKCh4OiBhbnkpID0+IHRoaXMuZXZlbnRUcmFjayh4LmFjdGlvbiwgeC5wcm9wZXJ0aWVzKSk7XG4gICAgYW5ndWxhcnRpY3MyLnNldFVzZXJQcm9wZXJ0aWVzLnN1YnNjcmliZSgoeDogYW55KSA9PiB0aGlzLnNldFVzZXJQcm9wZXJ0aWVzKHgpKTtcbiAgICBhbmd1bGFydGljczIuc2V0VXNlclByb3BlcnRpZXNPbmNlLnN1YnNjcmliZSgoeDogYW55KSA9PiB0aGlzLnNldFVzZXJQcm9wZXJ0aWVzKHgpKTtcbiAgfVxuXG4gIHB1YmxpYyBwYWdlVHJhY2socGF0aDogc3RyaW5nLCBsb2NhdGlvbjogYW55KSB7XG4gICAgLy8gVE9ET1xuICB9XG5cbiAgcHVibGljIGV2ZW50VHJhY2soYWN0aW9uOiBzdHJpbmcsIHByb3BlcnRpZXM6IGFueSkge1xuICAgIC8vIFRPRE9cbiAgfVxuXG4gIHB1YmxpYyBzZXRVc2VyUHJvcGVydGllcyhwcm9wZXJ0aWVzOiBhbnkpIHtcbiAgICAvLyBUT0RPXG4gIH1cbn1cbiJdfQ==
